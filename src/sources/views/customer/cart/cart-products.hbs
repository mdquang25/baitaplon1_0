<style>
    .limit-width {
        max-width: 12rem;
        word-break: break-word;
    }

    .table-max-width {
        max-width: 75rem;
    }
</style>
<div class="d-flex justify-content-center">
    <div class="d-flex justify-content-end align-items-center col-12 mx-lg-4 table-max-width">
        <div class="fs-4 col-4 d-flex justify-content-center align-items-center"><b>Giỏ hàng</b></div>
        <div class="col-4 d-flex justify-content-end"><a href="/giohang/don-mua"
                class="btn btn-primary d-flex align-items-center mt-4 mb-2" style="max-width: fit-content;"><i
                    class="fa-regular fa-rectangle-list"></i>&nbsp;Đơn mua</a>
        </div>
    </div>
</div>
<form class="d-flex justify-content-center" method="post" id="select-form"
    style="border-radius: 6px; overflow: hidden;">
    <input type="text" name="_method" class="d-none">
    <table class="table text-center m-0 table-max-width">
        <thead class="table-warning cart-table-header" style="top:5rem;">
            <tr>
                <th scope="col" class="table-header">
                    <div class="form-check d-flex justify-content-end">
                        <input class="form-check-input fs-5" type="checkbox" value="" id="check-all-1">
                        <label class="form-check-label" for="check-all-1">
                        </label>
                    </div>
                </th>
                <th scope="col" class="table-header"></th>
                <th scope="col" class="table-header text-start limit-width">Sản phẩm</th>
                <th scope="col" class="table-header to-be-hidden">Đơn giá</th>
                <th scope="col" class="table-header to-be-hidden">Số lượng</th>
                <th scope="col" class="table-header to-be-hidden">Số tiền</th>
                <th scope="col" class="to-be-hidden"></th>
            </tr>
        </thead>
        <style>
            .buttons-only {
                min-width: 4rem !important;
                max-width: 4rem !important;
            }

            .buttons-only:focus {
                /* Override the default focus styles */
                outline: none !important;
                box-shadow: none !important;
            }
        </style>
        <tbody class="">
            {{#each productQs}}
            <tr>
                <th scope="row">
                    <div class="form-check d-flex justify-content-end">
                        <input class="checkbox form-check-input fs-5" type="checkbox" value="{{this._id}}"
                            name="productQ_ids[]" id="{{this._id}}-checkbox">
                        <label class="form-check-label" for="{{this._id}}-checkbox">
                        </label>
                    </div>
                </th>
                <td onclick="navigateTo('/sanpham/{{this.product.slug}}/chitiet')"> <img class="thumnail img-thumbnail"
                        src="{{valueAt this.product.imagesUrls this.product.mainImageIndex}}" alt="Ảnh sản phẩm">
                </td>
                <td class="text-start limit-width">
                    <a href="/sanpham/{{this.product.slug}}/chitiet"
                        style="text-decoration: none;">{{this.product.name}}</a>
                    <div class="to-be-show-col" style="display:none;">
                        <div class="">{{this.product.price}}</div>
                        <div class="d-flex text-center" style="max-width: 8rem;">
                            <button onclick="updateQuantity('{{this._id}}', -1)"
                                class="btn rounded-0 btn-outline-secondary px-1 py-0" type="button"><i
                                    class="fa-solid fa-minus"></i></button>
                            <input readonly type="number" name="{{this._id}}quantity1" min="1"
                                max="{{this.product.stock}}" step="1" value="{{this.quantity}}" inputmode="decimal"
                                style="text-align: center; padding: 0 !important;"
                                class="form-control form-control-text-input" id="{{this._id}}quantity1" />
                            <button onclick="updateQuantity('{{this._id}}', 1)"
                                class="btn rounded-0 btn-outline-secondary px-1 py-0" type="button"><i
                                    class="fa-solid fa-plus"></i></button>
                        </div>
                    </div>
                </td>
                <td class="to-be-hidden">
                    <div style="color: black; font-weight: 400;" class="price-label">{{this.product.price}}</div>
                </td>
                <td class="to-be-hidden">
                    <div class="d-flex justify-content-center" style="width: 100%;">
                        <button onclick="updateQuantity('{{this._id}}', -1)"
                            class="btn rounded-0 btn-outline-secondary px-1 py-0" type="button"><i
                                class="fa-solid fa-minus"></i></button>
                        <input readonly type="number" name="{{this._id}}quantity2" min="1" max="{{this.product.stock}}"
                            step="1" value="{{this.quantity}}" inputmode="decimal"
                            style="text-align: center; padding: 0 !important; max-width: 4rem"
                            class="form-control form-control-text-input" id="{{this._id}}quantity2" />
                        <button onclick="updateQuantity('{{this._id}}', 1)"
                            class="btn rounded-0 btn-outline-secondary px-1 py-0" type="button"><i
                                class="fa-solid fa-plus"></i></button>
                    </div>
                </td>
                <td class="to-be-hidden">
                    <div id="{{this._id}}total" data-price="{{this.product.price}}" class="price-label outline-label">
                        {{mult this.quantity this.product.price}}</div>
                </td>
                <td class="to-be-hidden"><button class="delete-one-btn btn btn-outline-danger"
                        data-delete-id="{{this._id}}">Xóa</button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</form>

<nav class="card sticky-bottom navbar-light py-2 mx-auto mt-3 mb-2 table-max-width" style="background-color: #e3f2fd;">
    <div class="d-flex justify-content-between">
        <div class="form-check d-flex justify-content-center align-items-center ms-3">
            <input class="form-check-input fs-5 my-auto" type="checkbox" id="check-all-2">
            <label class="form-check-label d-flex align-items-center" for="check-all-2">&nbsp;<span
                    class="to-be-hidden">Chọn&nbsp;</span>tất cả<span class="to-be-hidden">({{productQs.length}})</span>
                <button class="btn btn-outline-danger mx-2" data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteModal">Xóa</button>
            </label>
        </div>
        <div class="d-flex">
            <div class="mobile-break d-flex align-items-center">
                <div>Tổng <span class="to-be-hidden">thanh toán</span>(<span id="total-label"
                        data-value="0">0</span><span class="to-be-hidden"> sản phẩm</span><span>):&nbsp;</span></div>
                <div id="total" class="price-label fs-4" data-value="0">0đ</div>
            </div>
            <button class="btn btn-warning ms-1 me-2" type="submit">Đặt hàng</button>
        </div>
    </div>
</nav>

<!--Modal=============================-->
<div class="modal fade" id="confirmDeleteModal" style="z-index: 999999;" tabindex="-1"
    aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Xóa sản phẩm</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="modal-body" class="modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="delete-btn">Xóa vĩnh viễn</button>
            </div>
        </div>
    </div>
</div>
<form id="delete-form" action="/giohang/sanpham/xoa" method="post" style="display: none;">

    <input name="_method" value="DELETE">
    <input type="text" name="deleteId" id="delete-id">
</form>

<script>
    const deleteForm = document.getElementById('delete-form');
    const deleteId = document.getElementById('delete-id');
    const deleteOneBtns = [...document.getElementsByClassName('delete-one-btn')];
    const deleteModal = document.getElementById('confirmDeleteModal');
    const deleteBtn = document.getElementById('delete-btn');
    const checkAll_1 = document.getElementById('check-all-1');
    const checkAll_2 = document.getElementById('check-all-2');
    const checkBoxes = [...document.getElementsByClassName('checkbox')];
    const selectForm = document.getElementById('select-form');

    checkAll_1.addEventListener('change', (e) => {
        const isChecked = e.target.checked;
        checkBoxes.forEach(checkbox => {
            checkbox.checked = isChecked;
        });
        checkAll_2.checked = isChecked;
        setTotal(isChecked);
    });
    checkAll_2.addEventListener('change', (e) => {
        const isChecked = e.target.checked;
        checkBoxes.forEach(checkbox => {
            checkbox.checked = isChecked;
        });
        checkAll_1.checked = isChecked;
        setTotal(isChecked);
    });

    function setTotal(isChecked) {
        if (isChecked) {
            var total = 0;
            var count = 0;
            checkBoxes.forEach(checkbox => {
                const quantity = parseInt(document.getElementById(checkbox.value + 'quantity1').value);
                count += quantity;
                total += quantity * parseInt(document.getElementById(checkbox.value + 'total').getAttribute('data-price'));
            });
            const sumTotalLabel = document.getElementById('total-label');
            const sumTotalTag = document.getElementById('total');
            sumTotalLabel.innerHTML = count;
            sumTotalLabel.setAttribute('data-value', count);
            sumTotalTag.innerHTML = total.toLocaleString('vi-VN') + 'đ';
            sumTotalTag.setAttribute('data-value', total);
        }
        else {
            const sumTotalLabel = document.getElementById('total-label');
            sumTotalLabel.innerHTML = '0';
            sumTotalLabel.setAttribute('data-value', 0);
            const sumTotalTag = document.getElementById('total');
            sumTotalTag.innerHTML = '0đ';
            sumTotalTag.setAttribute('data-value', 0);
        }
    }
    checkBoxes.forEach(checkbox => {
        checkbox.addEventListener('change', (e) => {
            var allChecked = true;
            var total = 0;
            var count = 0;
            checkBoxes.forEach(checkbox => {
                if (!checkbox.checked) {
                    allChecked = false;
                }
                else {
                    const quantity = parseInt(document.getElementById(checkbox.value + 'quantity1').value);
                    count += quantity;
                    total += quantity * parseInt(document.getElementById(checkbox.value + 'total').getAttribute('data-price'));
                }
            });
            const sumTotalLabel = document.getElementById('total-label');
            const sumTotalTag = document.getElementById('total');
            sumTotalLabel.innerHTML = count;
            sumTotalLabel.setAttribute('data-value', count);
            sumTotalTag.innerHTML = total.toLocaleString('vi-VN') + 'đ';
            sumTotalTag.setAttribute('data-value', total);

            checkAll_1.checked = allChecked;
            checkAll_2.checked = allChecked;
        })
    });

    if (deleteModal) {
        deleteModal.addEventListener('show.bs.modal', event => {
            const modalBody = document.getElementById('modal-body');
            var checkedCount = 0;
            checkBoxes.forEach(checkbox => {
                if (checkbox.checked)
                    checkedCount++;
            });
            modalBody.innerHTML = 'Bạn chắc chắn muốn xóa ' + checkedCount + ' sản phẩm khỏi giỏ hàng?';
        });
    }
    deleteBtn.addEventListener('click', function (event) {
        selectForm.action = '/giohang/xoa-chon';
        selectForm.querySelector(':first-child').setAttribute('value', 'DELETE');
        selectForm.submit();
    });

    deleteOneBtns.forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();
            deleteId.value = e.target.getAttribute('data-delete-id');
            deleteForm.submit();
        });
    })
    const prices = [...document.getElementsByClassName('price-label')];

    prices.forEach(function (price) {
        const number = parseFloat(price.innerHTML);
        price.innerHTML = number.toLocaleString('vi-VN') + 'đ';
    })

    function navigateTo(url) {
        window.location.href = url;
    }
    function updateQuantity(id, num) {
        const input1 = document.getElementById(id + 'quantity1');
        const input2 = document.getElementById(id + 'quantity2');
        const preValue = parseInt(input1.value)
        var newValue = preValue + num;
        const max = parseInt(input1.max);
        newValue = newValue < 1 ? 1 : newValue > max ? max : newValue;
        input1.value = newValue;
        input2.value = newValue;

        const total = document.getElementById(id + 'total');
        total.innerHTML = (newValue * parseInt(total.getAttribute('data-price'))).toLocaleString('vi-VN') + 'đ';

        const sumTotalLabel = document.getElementById('total-label');
        const sumTotalTag = document.getElementById('total');
        console.log('value: ', preValue, ' new: ', newValue);
        if (newValue !== preValue && document.getElementById(id + '-checkbox').checked) {
            console.log('!=');
            const k = parseInt(sumTotalLabel.getAttribute('data-value')) + num;
            sumTotalLabel.innerHTML = k;
            sumTotalLabel.setAttribute('data-value', k);
            const sumTotal = parseInt(sumTotalTag.getAttribute('data-value')) + num * parseInt(total.getAttribute('data-price'))
            sumTotalTag.innerHTML = sumTotal.toLocaleString('vi-VN') + 'đ';
            sumTotalTag.setAttribute('data-value', sumTotal);
        }
    }
</script>