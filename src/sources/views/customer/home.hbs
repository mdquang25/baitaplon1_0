<div class="row col-12 mx-auto justify-content-center">
    <div class="col-sm-8 col-md-6 px-0">
        <div id="carouselExampleAutoplaying" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                {{#each carousels}}
                <div class="carousel-item" style="max-height: 20rem;" onclick="navigateTo('{{this.link}}')">
                    <img src="{{this.imageUrl}}" class="d-block w-100" alt="ảnh quảng cáo">
                </div>
                {{/each}}
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleAutoplaying"
                data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleAutoplaying"
                data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>

<div class="d-flex m-4 justify-content-center flex-wrap">
    {{#each categories}}
    <select class="form-select mb-2 flex-flow-1 mx-2" style="width: fit-content; background-color: rgb(255, 223, 245)"
        name="typesId[]">
        <option value="">--{{this.name}}--</option>
        {{#each this.types}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
    </select>
    {{/each}}
</div>

<div id="search-heading" class="fs-1 mx-2"></div><br>
<div id="found-0-message" class="d-none fs-3 text-center"><i
        class="fa-solid fa-truck-container-empty fa-4x"></i>&nbsp;Không tìm
    thấy sản
    phẩm
    phù hợp&nbsp;<i class="fa-solid fa-face-sad-sweat fa-4x"></i></div>
<div id="search-results" class="row col-12 mx-auto">
    {{#each products}}
    <div class="col-6 col-sm-4 col-md-3 col-lg-2 p-0 mb-1 mb-sm-0">
        <div onclick="navigateTo('/sanpham/{{this.slug}}/chitiet')" data-name="cards"
            class="card product-card mb-1 mx-auto" style="height: 24rem; width: 13rem; max-width:inherit;">
            <img src="{{valueAt this.imagesUrls this.mainImageIndex}}" class="card-img-top card-image object-fit-cover"
                alt="{{this.name}}">
            <div class="card-body">
                <h6 class="card-title">{{this.name}}</h6>
                <span class="old-price-label" data-onsale="{{this.onSale}}">{{this.oldPrice}}</span><span
                    class="old-price-label price-label-ending">đ</span><br>
                <span class="price-label">{{this.price}}</span><span class="price-label price-label-ending">đ</span><br>

            </div>
        </div>
    </div>
    {{/each}}
</div>
<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        const prices = document.querySelectorAll('span[class="price-label"]');
        const oldPrices = document.querySelectorAll('span[class="old-price-label"]');
        const cards = document.querySelectorAll('div[data-name="cards"]');
        const firstCarousel = document.querySelector('div[class="carousel-item"]');
        const formSearch = document.getElementById('form-search');
        const searchInput = document.getElementById('search-input');
        const searchResults = document.getElementById('search-results');
        const searchHeading = document.getElementById('search-heading');
        const foundError = document.getElementById('found-0-message');

        updatePriceLabels(oldPrices, prices);
        firstCarousel.classList.add('active');
        cards.forEach(card => {
            card.addEventListener('touchstart', function (e) {
                this.classList.add('touched');
            });
            card.addEventListener('touchend', function (e) {
                this.classList.remove('touched');
            });
        });

        formSearch.addEventListener('submit', event => {
            event.preventDefault();
            const query = searchInput.value.trim();
            if (query !== '') {
                search(query);
            }
        });

        function search(query) {
            fetch(`/sanpham/tim-kiem?query=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                    searchHeading.innerHTML = 'kết quả tìm kiếm từ khóa: "' + query + '"';
                    // Update search results on the page
                    searchResults.innerHTML = '';
                    if (data.products && data.products.length > 0) {
                        if (!foundError.classList.contains('d-none'))
                            foundError.classList.add('d-none');
                        data.products.forEach(product => {
                            const oldPrice = product.oldPrice.$numberDecimal;
                            const price = product.price.$numberDecimal;
                            const content =
                                `<div class="col-6 col-sm-4 col-md-3 col-lg-2 p-0 mb-1 mb-sm-0">
        <div onclick="navigateTo('/sanpham/${product.slug}/chitiet')" data-name="cards"
            class="card product-card mb-1 mx-auto" style="height: 24rem; width: 13rem; max-width:inherit;">
            <img src="${product.imagesUrls[product.mainImageIndex]}" class="card-img-top card-image object-fit-cover"
                alt="${product.name}">
            <div class="card-body">
                <h6 class="card-title">${product.name}</h6>
                <span class="old-price-label" data-onsale="${product.onSale}">${oldPrice}</span><span
                    class="old-price-label price-label-ending">đ</span><br>
                <span class="price-label">${price}</span><span class="price-label price-label-ending">đ</span><br>
            </div>
        </div>
    </div>`;
                            searchResults.insertAdjacentHTML('beforeend', content);
                        });
                        const prices = document.querySelectorAll('span[class="price-label"]');
                        const oldPrices = document.querySelectorAll('span[class="old-price-label"]');
                        updatePriceLabels(oldPrices, prices);

                    }
                    else
                        foundError.classList.remove('d-none');
                }).catch(error => {
                    console.error('Error:', error);
                });
        }


    });

    function updatePriceLabels(oldPrices, prices) {
        oldPrices.forEach(function (oldPrice) {
            const onSale = oldPrice.getAttribute('data-onsale');
            if (onSale === 'true') {
                const number = parseInt(oldPrice.innerHTML);
                oldPrice.innerHTML = number.toLocaleString('vi-VN');
            }
            else {
                oldPrice.classList.add('d-none')
                oldPrice.nextElementSibling.classList.add('d-none');
            }
        })
        prices.forEach(function (price) {
            const number = parseInt(price.innerHTML);
            price.innerHTML = number.toLocaleString('vi-VN');
        })
    }
    function navigateTo(url) {
        window.location.href = url;
    }
</script>