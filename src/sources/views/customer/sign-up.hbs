<div class="text-center mb-5">
    <h1 id="brand-name-label">Việt Tuấn Trung</h1>
    <form id="form-sign-up" action="/dangky" method="post" class="floating-label vstack gap-2 col-md-5 mx-auto">
        <h1 id="sign-label">Đăng ký thành viên</h1>
        <div class="row align-items-center form-floating mb-3">
            <input type="tel" name="phoneNumber" maxlength="10" id="phoneNumber" autocomplete="tel" class="form-control"
                value="{{account.phoneNumber}}" placeholder="Nhập số điện thoại.." pattern="[0-9]{10}" required>
            <label for="phoneNumber">Số điện thoại</label>
        </div>
        <div class="row align-items-center form-floating mb-3">
            <input type="password" maxlength="32" name="password" class="form-control position-relative" id="new-password"
                placeholder="Tạo mật khẩu" autocomplete="new-password" required>
            <button class=" position-absolute top-50 end-0 translate-middle-y eye-icon-btn" type="button"
                id="togglePasswordButton1">
                <i class="fa-regular fa-eye-slash"></i>
            </button>
            <label for="new-password">Tạo mật khẩu</label>
        </div>
        <div class="row align-items-center form-floating mb-3">
            <input type="password" maxlength="32" name="password2" class="form-control position-relative" id="new-password2"
                placeholder="Xác nhận mật khẩu" autocomplete="new-password" required>
            <button class=" position-absolute top-50 end-0 translate-middle-y eye-icon-btn" type="button"
                id="togglePasswordButton2">
                <i class="fa-regular fa-eye-slash"></i>
            </button>
            <label for="new-password2">Xác nhận mật khẩu</label>
            <div id="error-message" class="form-text text-danger" style="height: 1rem"></div>
        </div>
        <div class="form-check d-flex align-items-center">
            <input class="form-check-input me-2" style=" border-color: blue" type="checkbox" value="đồng ý" required
                id="confirm-rules">
            <label class="form-check-label" for="confirm-rules">
                Tôi đồng ý với các <a href="#">điều khoản và điều kiện</a> khi đăng ký và sử dụng tài khoản
            </label>
        </div>
        <div class="d-flex justify-content-center">
            <div id="spinner" class="spinner-border text-primary mt-4 mb-2" role="status">
            </div>
        </div>
        <button id="submit-btn" type="submit" class="btn btn-success p-3">Đăng ký</button>
        <a class="no-decor-link" href="/dangnhap">Đã có tài khoản: đăng nhập</a>
    </form>
</div>
<script>
    const form = document.getElementById('form-sign-up');
    const phoneNumberInput = document.getElementById('phoneNumber');
    const password1 = document.getElementById('new-password');
    const password2 = document.getElementById('new-password2');
    const errorLabel = document.getElementById('error-message');
    const togglePasswordButton1 = document.getElementById('togglePasswordButton1');
    const togglePasswordButton2 = document.getElementById('togglePasswordButton2');
    const sp = document.getElementById('spinner');
    const submitBtn = document.getElementById('submit-btn');

    spinner.classList.add('d-none');
    function showSpinner() {
        spinner.classList.remove('d-none');
        submitBtn.classList.add('d-none');
    }
    function hideSpinner() {
        spinner.classList.add('d-none');
        submitBtn.classList.remove('d-none');
    }

    togglePasswordButton1.addEventListener('click', togglePassword);
    togglePasswordButton2.addEventListener('click', togglePassword);
    function togglePassword() {
        const type = this.previousElementSibling.getAttribute('type') === 'password' ? 'text' : 'password';
        this.previousElementSibling.setAttribute('type', type);
        this.querySelector('i').classList.toggle('fa-eye');
        this.querySelector('i').classList.toggle('fa-eye-slash');
    };

    form.addEventListener('submit', (event) => {
        event.preventDefault();
        if (validateForm()) {
            errorLabel.innerHTML = '';
            showSpinner();
            submitForm();
            hideSpinner();
        }
    });

    function submitForm() {
        const formData = new FormData(form);
        const data = Array.from(formData.entries()).reduce((acc, [key, value]) => {
            acc[key] = value;
            return acc;
        }, {});
        const json = JSON.stringify(data);
        fetch(form.action, {
            method: form.method,
            headers: {
                'Content-Type': 'application/json'
            },
            body: json
        })
            .then(response => {
                if (response.ok)
                    return response.json();
                else
                    throw new Error('error');
            }).then(data => {
                if (data.created) {
                    toastSuccessElement.firstElementChild.innerHTML = 'Tạo tài khoản thành công';
                    toastSuccess.show();
                    setTimeout(() => {
                        window.location.href = '/dangnhap';
                    }, 1000);
                }
                else if (data.error === 'input') {
                    errorLabel.innerHTML = 'Thông tin nhập không hợp lệ!';
                }
                else if (data.error === 'exist') {
                    errorLabel.innerHTML = 'Số điện thoại đã tồn tại!';
                }
                else if (data.error === 'phone') {
                    errorLabel.innerHTML = 'Số điện thoại không hợp lệ!';
                }
                else if (data.error === 'system') {
                    throw new Error('error');
                }
            }).catch((error) => {
                toastDangerElement.firstElementChild.innerHTML = 'Lỗi hệ thống! vui lòng thử lại sau';
                toastDanger.show();
            });
    }

    password1.addEventListener('input', (e) => {
        if (password1.value.length >= 32) {
            errorLabel.innerHTML = 'Mật khẩu tối đa 32 kí tự!';
        }
    });

    password2.addEventListener('input', (e) => {
        if (password2.value.length >= 32) {
            errorLabel.innerHTML = 'Mật khẩu tối đa 32 kí tự!';
        }
    });
    function validateForm() {
        let isValid = true;

        phoneNumberInput.value = phoneNumberInput.value.trim();
        password1.value = password1.value.trim();
        password2.value = password2.value.trim();
        if (!phoneNumberInput.value) {
            errorLabel.innerHTML = 'nhập tên đăng nhập!';
            isValid = false;
        } else if (password1.value.length < 6 || password2.value.length < 6) {
            errorLabel.innerHTML = 'mật khẩu phải từ 6 ký tự trở lên!';
            isValid = false;
        }
        else if (password1.value.length > 32 || password2.value.length > 32) {
            isValid = false;
        }
        else if (password1.value !== password2.value) {
            errorLabel.innerHTML = 'mật khẩu không khớp!';
            isValid = false;
        }
        return isValid;
    }

</script>